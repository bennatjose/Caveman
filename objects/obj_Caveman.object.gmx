<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Caveman</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>721</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_health</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>100</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>701</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_score</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
grav = 0.2;
hsp = 0;
vsp = 0;
jumpspeed = 7;
movespeed = 4;
image_speed=0.1;
throw_axe=true;
bounce=true;
sindex=1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>burn</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index=spr_BatmanStanding;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index=spr_BatmanStandingLeft;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Room Change and Stop game sound
//show_message("This is Alarm 4");
//instance_destroy();

//sound_stop(snd_Game) ;room_goto(rm_GameOver);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>burn=0;
hspeed=0;
vspeed=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Score Increase
score+=20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Health Decrease
health-=20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>throw_axe = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Players Movement
//Get the players input
if(bounce = true &amp;&amp; burn==0)
{
    key_right = keyboard_check(ord('D'));
    key_left = -keyboard_check(ord('A'));
    key_jump = keyboard_check_pressed(ord('W'));
    key_shoot = keyboard_check_pressed(vk_space);
    
    
    //Changing caveman sprite when pressing left or right 
    if(sindex=1)
    {
        if(keyboard_check(ord('A')))
        {
            sprite_index=spr_CavemanLeft;
        }
        else if(keyboard_check(ord('D')))
        {
            sprite_index=spr_Caveman;    
        }
        else
        {
            if(sprite_index=spr_Caveman)
            {
                sprite_index=spr_CavemanStanding;
            }
            if(sprite_index=spr_CavemanLeft)
            {
                sprite_index=spr_CavemanStandingLeft;
            }
        }
    }
    else if(sindex=2)
    {
        if(keyboard_check(ord('A')))
        {
            sprite_index=spr_BatmanWalkingLeft;
        }
        else if(keyboard_check(ord('D')))
        {
            sprite_index=spr_BatmanWalking;    
        }
        else
        {
            if(sprite_index=spr_BatmanWalking)
            {
                sprite_index=spr_BatmanStanding;
            }
            if(sprite_index=spr_BatmanWalkingLeft)
            {
                sprite_index=spr_BatmanStandingLeft;
            }
        }
    }
      
    
    
    //React to inputs
    move = key_left + key_right;
    hsp = move * movespeed;
}
if (vsp &lt; 10) vsp+=grav;

if (place_meeting(x+10,y+1,obj_Platform))
{
    if(key_jump == 1)
    {    
        vsp = key_jump * -jumpspeed;
        audio_play_sound(jumping, 10, false);
    }
}

//Horizontal Collision w/ Platform
if (place_meeting(x+hsp,y,obj_Platform))
{
//show_message('this is horizontal collision');
    while(!place_meeting(x+sign(hsp),y,obj_Platform))
    {
        x += sign(hsp);
    }
    hsp = 0;
}

if (place_meeting(x+hsp,y,obj_Enemy1))
{
    while(!place_meeting(x+sign(hsp),y,obj_Enemy1))
    {
        x += sign(hsp);
    }
    hsp = 0;
}

x += hsp;

//Vertical Collision w/ Platform
if (place_meeting(x,y+vsp,obj_Platform))
{
    while(!place_meeting(x,y+sign(vsp),obj_Platform))
    {
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;

// Stone Axe Shooting 
if(key_shoot)
{
    if(throw_axe=true)
    {
        throw_axe=false;
        var stoneaxe;
        if(sindex=1)
        {
            stoneaxe=instance_create(x,y,obj_StoneAxe);
            if(sprite_index=spr_CavemanLeft || sprite_index=spr_CavemanStandingLeft)
            {
                stoneaxe.direction=180;
                stoneaxe.image_xscale=-1;
                audio_play_sound(throwing_weapon, 10, false);
            }
            else if(sprite_index=spr_Caveman || sprite_index=spr_CavemanStanding)
            {
                stoneaxe.direction=0;
                //stoneaxe.image_yscale = -1;
                audio_play_sound(throwing_weapon, 10, false);
            }
            stoneaxe.image_angle=image_angle;
            
            stoneaxe.speed=10;
        }
        if(sindex=2)
        {
            stoneaxe=instance_create(x,y,obj_StoneAxe);
            if(sprite_index=spr_BatmanWalkingLeft || sprite_index=spr_BatmanStandingLeft)
            {
                sprite_index=spr_BatmanThrowingLeft;
                alarm[5]=30;
                stoneaxe.direction=180;
                stoneaxe.image_xscale=-1;
                audio_play_sound(throwing_weapon, 10, false);
            }
            else if(sprite_index=spr_BatmanWalking || sprite_index=spr_BatmanStanding)
            {
                sprite_index=spr_BatmanThrowing;
                alarm[6]=30;
                stoneaxe.direction=0;
                //stoneaxe.image_yscale = -1;
                audio_play_sound(throwing_weapon, 10, false);
            }
            stoneaxe.image_angle=image_angle;            
            stoneaxe.speed=10;
        }
        alarm[0]=30;
    }
}

// Death Animation

if(health&lt;=0){
//show_message("inside health&lt;=0");
//sprite_index=spr_CavemanDeath;

//image_speed = .15;
//instance_destroy();
//    if(image_index==5){
    instance_destroy();
    instance_create(x,y,objDyingCaveman);
//    room_goto(rm_GameOver);
    //alarm[4]=05;
    }
//show_message("alarm should have run now");
//}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Fire">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*burn = 1;
hspeed= (-(hspeed*2));
vspeed=-5;
alarm[3]=50;
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>723</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_health</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>10</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>10</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>110</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>20</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>703</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_score</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>7</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>40</string>
          </argument>
          <argument>
            <kind>1</kind>
            <string>Score: </string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cheat Code
cheat=get_string("","")
if(cheat="godmod"){
health=100;


}
if(cheat="batman"){
sindex=2;
sprite_index=spr_BatmanStanding;


}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
