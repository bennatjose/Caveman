<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Fire</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
invincible = 1;
image_speed=0.1;
direction = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_Caveman) bounce = true;
with (obj_Caveman) sprite_index = spr_BatmanStandingLeft;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_Caveman) bounce = true;
with (obj_Caveman) sprite_index = spr_BatmanStanding;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_Caveman) bounce = true;
with (obj_Caveman) sprite_index = spr_CavemanStanding;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//show_message("This is being run in Alarm1 of Fire object");
with (obj_Caveman) bounce = true;
with (obj_Caveman) sprite_index = spr_CavemanStandingLeft;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>invincible = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Collision

if (place_meeting(x,y,obj_Caveman))
{    
    if (invincible = 1)
    {
        audio_play_sound(impact, 10, false);
        with (obj_Caveman) health -= 10;   
        if(obj_Caveman.sindex=1)
        {
            if(obj_Caveman.sprite_index==spr_CavemanLeft || obj_Caveman.sprite_index==spr_CavemanStandingLeft)
            {
                //show_message("0 stepin");
                direction = 0;
                with (obj_Caveman) 
                {
                     //show_message(jumpspeed);    
                    if(vsp &gt; 0)
                    {
                        vsp = -jumpspeed;  
                        with (obj_Caveman) sprite_index = spr_Caveman_Hurt;      
                    }
                    else
                    {
                       
                        while(bounce)
                        {                                       
                            bounce = false;                                      
                            x+=25; 
                            with (obj_Caveman) sprite_index = spr_Caveman_Hurt;              
                            obj_Fire.alarm[1]=30;
                        }
                    }
                }
            }
            else if(obj_Caveman.sprite_index==spr_Caveman || obj_Caveman.sprite_index==spr_CavemanStanding)
            {
                //show_message("1 stepin");
                direction = 1;
                with (obj_Caveman) 
                {
                     //show_message(jumpspeed);    
                    if(vsp &gt; 0)
                    {
                        vsp = -jumpspeed;   
                        with (obj_Caveman) sprite_index = spr_Caveman_Hurt;     
                    }
                    else
                    {                       
                        while(bounce)
                        {                                       
                            bounce = false;                                      
                            x-=25;
                            with (obj_Caveman) sprite_index = spr_Caveman_Hurt;               
                            obj_Fire.alarm[2]=30;
                        }
                    }
                }
            }  
            with (obj_Caveman) sprite_index = spr_Caveman_Hurt;            
        }     
        if(obj_Caveman.sindex=2)
        {
            if(obj_Caveman.sprite_index==spr_BatmanStandingLeft || obj_Caveman.sprite_index==spr_BatmanWalkingLeft)
            {                
                direction = 0;
                with (obj_Caveman) 
                {                       
                    if(vsp &gt; 0)
                    {
                        vsp = -jumpspeed;  
                        with (obj_Caveman) sprite_index = spr_BatmanHurtLeft;      
                    }
                    else
                    {                       
                        while(bounce)
                        {                                       
                            bounce = false;                                      
                            x+=25; 
                            with (obj_Caveman) sprite_index = spr_BatmanHurtLeft;              
                            obj_Fire.alarm[4]=30;
                        }
                    }
                }
                with (obj_Caveman) sprite_index = spr_BatmanHurtLeft;
            }
            else if(obj_Caveman.sprite_index==spr_BatmanStanding || obj_Caveman.sprite_index==spr_BatmanWalking)
            {                
                direction = 1;
                with (obj_Caveman) 
                {                        
                    if(vsp &gt; 0)
                    {
                        vsp = -jumpspeed;   
                        with (obj_Caveman) sprite_index = spr_BatmanHurt;     
                    }
                    else
                    {                       
                        while(bounce)
                        {                                       
                            bounce = false;                                      
                            x-=25;
                            with (obj_Caveman) sprite_index = spr_BatmanHurt;               
                            obj_Fire.alarm[3]=30;
                        }
                    }
                }
                with (obj_Caveman) sprite_index = spr_BatmanHurt;
            }                         
        }
        invincible = 0;       
        alarm[0]=60;        
    }        
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
